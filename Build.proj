<Project ToolsVersion="3.5" DefaultTargets="Build" InitialTargets="InitializeProperties" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="D:\DevTools\Build\Build\BuildFramework.xml"/>
  
  <Import Project="$(DevBranch)\$(DevBranchDir)\Shared\Build\CommonBuild.proj"/>

  <PropertyGroup>
    <!-- Target/platform -->
    <BuildTarget>Debug</BuildTarget>
    <BuildPlatform>x64</BuildPlatform>

    <!-- Whether to use junction points for Bin and Obj -->
    <UseJunctions>true</UseJunctions>
    <!-- The drive when the Bin junction point is created -->
    <BinDrive>D</BinDrive>
    <!-- The drive when the Obj junction point is created -->
    <ObjDrive>D</ObjDrive>
    
    <!-- Fail if we can't set registry key access rights? -->
    <SetRegistryAccessThrowOnError>true</SetRegistryAccessThrowOnError>

    <!-- Set to true to rebuild all projects -->
    <Rebuild>false</Rebuild>
    <!-- Set to true to register COM objects -->
    <RegisterDlls>true</RegisterDlls>
    <!-- Set to true to kill processes before registering COM objects -->
    <KillDllProcesses>false</KillDllProcesses>

    <!-- Whether to create IIS web sites -->
    <CreateWebSites>true</CreateWebSites>

    <!-- Version info -->
    <MajorVersion>7</MajorVersion>
    <MinorVersion>1</MinorVersion>
    <MajorVersionForCompatibility>7</MajorVersionForCompatibility>
    <MinorVersionForCompatibility>0</MinorVersionForCompatibility>
    <ServicePack></ServicePack>
    <BuildNumber>0</BuildNumber>
    <BuildRevision>0</BuildRevision>
    <BuildDate></BuildDate>
    <BuildTag></BuildTag>

    <!-- Source control info -->
    <BranchName>release-7.0</BranchName>

    <!-- Setup options -->
    <Refresh>false</Refresh>
    <Retrieve>true</Retrieve>
    <IvyCache></IvyCache>
    <IvyOfficial>false</IvyOfficial>
    <Beta>false</Beta>
    <WriteReport>true</WriteReport>
    <ReadReport>false</ReadReport>
    <Symlink>true</Symlink>
    <ReleaseBuild>false</ReleaseBuild>
    <MonthlySitecore></MonthlySitecore>
    <MonthlyJsSearch></MonthlyJsSearch>
    <MonthlyDIP></MonthlyDIP>
    <MonthlyTextAnalytics></MonthlyTextAnalytics>
    <MonthlyFrontEndNet></MonthlyFrontEndNet>
    <MonthlyCES></MonthlyCES>

    <!-- Build options -->
    <UnitTests>false</UnitTests>
    <OfficialBuild>false</OfficialBuild>
    <NewBuildNumber>0</NewBuildNumber>
    <NewBuildRevision>0</NewBuildRevision>

    <!-- Publish options -->
    <IndexSources>false</IndexSources>
    <Local>true</Local>

    <!-- Copyright info -->
    <Company>Coveo Solutions Inc.</Company>
    <CompanyUrl>http://www.coveo.com</CompanyUrl>
    <Copyright>Copyright (c) 2004-2013 , Coveo Solutions Inc.</Copyright>
    <ProductName>Coveo Enterprise Search</ProductName>
    <ProductNameForBuildIni>Abot</ProductNameForBuildIni>
    <JenkinsBuildName></JenkinsBuildName>
  </PropertyGroup>
  
  <Import Project="$(DevBranch)\$(DevBranchDir)\Shared\PersonalOptions.proj"/>
  
  <PropertyGroup>
    <!-- Dependent properties -->
    <BuildRoot>$(MSBuildProjectDirectory)</BuildRoot>
    <SourceRoot>$(BuildRoot)\dependencies</SourceRoot>
    <OutputPath>$(BuildRoot)\Bin\$(BuildPlatform)\$(BuildTarget)</OutputPath>
    <Win32OutputPath>$(BuildRoot)\Bin\Win32\$(BuildTarget)</Win32OutputPath>
    <ReportPath Condition="!$(WriteReport)"></ReportPath>
    <ReportPath Condition="$(WriteReport)">$(BuildRoot)\resolvedrevisions.xml</ReportPath>
    <ResolvedRevisionsFile Condition="!$(ReadReport)"></ResolvedRevisionsFile>
    <ResolvedRevisionsFile Condition="$(ReadReport)">$(BuildRoot)\resolvedrevisions.xml</ResolvedRevisionsFile>
    <BuildConfiguration>$(BuildTarget)|$(BuildPlatform)</BuildConfiguration>
    <BuildConfigurationWithCustomVersion>$(BuildTarget)|$(BuildPlatform)</BuildConfigurationWithCustomVersion>
    <BuildTargetSuffix Condition="'$(BuildTarget)'=='Debug'">D</BuildTargetSuffix>
    <BuildTargetSuffix Condition="'$(BuildTarget)'=='Release'"></BuildTargetSuffix>
    <BuildPlatformSuffix Condition="'$(BuildPlatform)'=='Win32'"></BuildPlatformSuffix>
    <BuildPlatformSuffix Condition="'$(BuildPlatform)'=='x64'"> x64</BuildPlatformSuffix>
    <BinaryFileSuffix>$(MajorVersion)$(BuildTargetSuffix)</BinaryFileSuffix>
    
    <!-- Tells PortableCES that this module pulls CGLMem via Ivy. Do not modify. -->
    <IvyBasedCGLMem>true</IvyBasedCGLMem>
  </PropertyGroup>
  
  <PropertyGroup>
    <!-- Populated properties -->
    <IvyFile></IvyFile>
    <CoreMajorVersion></CoreMajorVersion>
    <CoreMinorVersion></CoreMinorVersion>
  </PropertyGroup>

  <Import Project="$(DevBranch)\$(DevBranchDir)\Shared\Build\SetupCreateJunctions.proj"/>

  <Target Name="InitializeProperties">
    <CheckTargetPlatform BuildTarget="$(BuildTarget)" BuildPlatform="$(BuildPlatform)" />

    <RetrieveLastRevision Condition="$(ReleaseBuild)"
      V6="true"
      BuildNumber="$(NewBuildNumber)"
      ProductName="$(ProductNameForBuildIni)">
      <Output TaskParameter="RetrievedRevisionNumber" PropertyName="NewBuildRevision"/>
    </RetrieveLastRevision>

    <Plus Condition="$(ReleaseBuild)"
      Number1="$(NewBuildRevision)"
      Number2="1">
      <Output TaskParameter="Result" PropertyName="NewBuildRevision"/>
    </Plus>

    <!-- This will ensure that we have a Build.ini file in the root directory. -->
    <!-- That file will contain all information regarding the build number, revision and date. -->
    <CreateBuildIni
      WorkingDirectoryRootFolder="$(BuildRoot)"
      DefaultIniFolder="D:\DevTools\Build"
      ForceNewBuildNumber="true"
      ForceNewEntry="$(ReleaseBuild)"
      NewBuildNumber="$(NewBuildNumber)"
      NewRevisionNumber="$(NewBuildRevision)"
      OfficialBuild="$(OfficialBuild)"
      MajorVersion="$(MajorVersion)"
      MinorVersion="$(MinorVersion)"
      ProductName="$(ProductNameForBuildIni)"
      JenkinsBuildName="$(JenkinsBuildName)"/>

    <!-- Now load back the Build.ini file and populate our properties. -->
    <LoadBuildNumber Path="$(BuildRoot)\Build.ini">
      <Output TaskParameter="BuildNumber" PropertyName="BuildNumber"/>
      <Output TaskParameter="BuildRevision" PropertyName="BuildRevision"/>
      <Output TaskParameter="BuildDate" PropertyName="BuildDate"/>
    </LoadBuildNumber>
    
    <!-- Get source control info -->
    <!--GetMercurialBranch>
      <Output TaskParameter="Branch" PropertyName="BranchName"/>
    </GetMercurialBranch-->
      
    <!-- Create property for child projects. This must be done here after handling -->
    <!-- the build number stuff for it to be properly propagated. -->
    <CreateProperty
      Value="BuildTarget=$(BuildTarget);
             BuildPlatform=$(BuildPlatform);
             BuildRoot=$(BuildRoot);
             SourceRoot=$(SourceRoot);
             BranchName=$(BranchName);
             Rebuild=$(Rebuild);
             CreateWebSites=$(CreateWebSites);
             UseJunctions=$(UseJunctions);
             SignFiles=$(SignFiles);
             MajorVersion=$(MajorVersion);
             MinorVersion=$(MinorVersion);
             MajorVersionForCompatibility=$(MajorVersionForCompatibility);
             MinorVersionForCompatibility=$(MinorVersionForCompatibility);
             BuildNumber=$(BuildNumber);
             BuildRevision=$(BuildRevision);
             BuildDate=$(BuildDate);
             BuildTag=$(BuildTag);
             Company=$(Company);
             CompanyUrl=$(CompanyUrl);
             Local=$(Local);
             ProductName=$(ProductName);
             ProductNameForBuildIni=$(ProductNameForBuildIni);
             Retrieve=$(Retrieve);
             UnitTests=$(UnitTest);
             OutputPath=$(OutputPath);
             Win32OutputPath=$(Win32OutputPath);
             BuildConfiguration=$(BuildConfiguration);
             BuildConfigurationWithCustomVersion=$(BuildConfigurationWithCustomVersion);
             BuildTargetSuffix=$(BuildTargetSuffix)">
      <Output TaskParameter="Value" PropertyName="ChildProperties"/>
    </CreateProperty>
    <!-- NOTE: do NOT pass $(BuildPlatformSuffix) in the property creation above! -->
    <!-- That property is redefined in all Build.proj that need it because it has -->
    <!-- a leading blank character that gets stripped off during any attempt to -->
    <!-- pass it through MSBuild tasks' Properties parameters. -->
    
    <!-- Subset of child properties just for the post-retrieve build step -->
    <CreateProperty
      Value="OutputPath=$(OutputPath);
             SourceRoot=$(SourceRoot);
             RegisterDlls=$(RegisterDlls);
             KillDllProcesses=$(KillDllProcesses);
             SetRegistryAccessThrowOnError=$(SetRegistryAccessThrowOnError)">
      <Output TaskParameter="Value" PropertyName="PostRetrieveProperties"/>
    </CreateProperty>
  </Target>

  <Target Name="All">
    <CallTargetEx Targets="Setup" />
    <CallTargetEx Targets="Build" />
    <CallTargetEx Targets="Publish" />
  </Target>

  <Target Name="Setup" DependsOnTargets="SetupCreateJunctions">
    <!-- Retrieve dependencies with Ivy -->
    <CallTargetEx Targets="RetrieveDependencies"/>
    
    <!-- Generate files from template. This needs to be done after Ivy retrieval since we need dependency infos.-->
    <CallTargetEx Targets="GenerateVersionFiles"/>
    
    <!-- Copy some files that are in the source to the output so we can publish them -->
    <CallTargetEx Targets="CopyFilesToOutput"/>
  
    <!-- Call the PostRetrieve task to register DLLs. -->
    <MSBuild Projects="$(OutputPath)\$(ProductNameForBuildIni)\PostRetrieve.proj" Targets="RegisterDllArtifacts" Properties="$(PostRetrieveProperties)"/>

  </Target>

  <Target Name="Build">
	  <SetTargetConfiguration Name="$(BuildTarget)" Platform="$(BuildPlatform)"/>

    <BuildVS2013
      Solution="$(MSBuildProjectDirectory)\Abot.sln"
      Configuration="$(BuildConfiguration)"
      Rebuild="$(Rebuild)"/>
  </Target>
  
  <Target Name="Publish" DependsOnTargets="PrepareIvyFile">
    <!-- Index the sources if necessary -->
    <Exec Command="D:\DevTools\bin\srcsrv\hgindex.cmd" Condition="$(IndexSources)" />

    <PropertyGroup>
      <RevisionSuffix Condition="$(NewBuildRevision) == 0"></RevisionSuffix>
      <RevisionSuffix Condition="$(NewBuildRevision) != 0">.$(NewBuildRevision)</RevisionSuffix>
    </PropertyGroup>
    <IvyPublish 
      IvyFile="$(IvyFile)"
      Patterns="[artifact].[ext]"
      Revision="$(MajorVersion).$(MinorVersion).$(BuildNumber)$(RevisionSuffix)"
      Local="$(Local)"
      Official="$(IvyOfficial)"
      Beta="$(Beta)"
      MessageLevel="$(IvyVerbosity)"
      Cache="$(IvyCache)" />
  </Target>
  
  <Target Name="PrepareIvyFile">
    <ItemGroup>
      <!-- Tokens that need to be replaced in Ivy descriptor file. Also used for filters. -->
      <!-- Key represents the token that appears in the Ivy template file and the value is -->
      <!-- what is listed in the Include. Needs to be here so that dynamic values are filled properly. -->
      <IvyTokens Include="$(BuildTarget)">
        <Key>target</Key>
      </IvyTokens>
      <IvyTokens Include="$(BuildPlatform)">
        <Key>platform</Key>
      </IvyTokens>
      <IvyTokens Include="$(BinaryFileSuffix)">
        <Key>binaryfilesuffix</Key>
      </IvyTokens>
      <IvyTokens Include="$(BranchName)">
        <Key>branch</Key>
      </IvyTokens>
    </ItemGroup>
  
    <IvyCreateDescriptor
      IvyTemplateFile="$(BuildRoot)/ivy.template.xml"
      OutputPath="$(OutputPath)"
      IvyTokens="@(IvyTokens)"
      FilterDefines="@(IvyTokens)"
      ResolvedRevisionsFile="$(ResolvedRevisionsFile)">
      <Output TaskParameter="IvyFile" PropertyName="IvyFile"/>
    </IvyCreateDescriptor>
  </Target>

  <Target Name="RetrieveDependencies" DependsOnTargets="PrepareIvyFile">
    <IvyResolve
      IvyFile="$(IvyFile)"
      Refresh="$(Refresh)"
      Local="$(Local)"
      Official="$(IvyOfficial)"
      Beta="$(Beta)"
      Cache="$(IvyCache)"
      MessageLevel="$(IvyVerbosity)"
      ReportPath="$(ReportPath)">
      <Output TaskParameter="RetrievedRevisions" ItemName="RetrievedRevisions"/>
    </IvyResolve>
    <IvyRetrieve Condition="$(Retrieve)"
      IvyFile="$(IvyFile)"
      Refresh="$(Refresh)"
      Local="$(Local)"
      Official="$(IvyOfficial)"
      Beta="$(Beta)"
      Cache="$(IvyCache)"
      OutputPath="$(OutputPath)"
      SourceRoot="$(SourceRoot)"
      symlink="$(Symlink)"
      MessageLevel="$(IvyVerbosity)">
      <Output TaskParameter="PostRetrieveBuildFiles" ItemName="PostRetrieveBuildFiles"/>
    </IvyRetrieve>
    <MSBuild Condition="$(Retrieve)"
      Projects="@(PostRetrieveBuildFiles)"
      Properties="$(PostRetrieveProperties)"/>

    <!-- Extract dependency information -->
    <CreateProperty Value="%(RetrievedRevisions.MajorVersion)" Condition="'%(RetrievedRevisions.Module)' == 'Core'">
      <Output TaskParameter="Value" PropertyName="CoreMajorVersion"/>
    </CreateProperty>
    <CreateProperty Value="%(RetrievedRevisions.MinorVersion)" Condition="'%(RetrievedRevisions.Module)' == 'Core'">
      <Output TaskParameter="Value" PropertyName="CoreMinorVersion"/>
    </CreateProperty>
  </Target>

  <Target Name="GenerateVersionFiles">
    <ItemGroup Condition="$(Retrieve)">
      <!-- Additional replacements. Needs to be in this target since it needs dependency info. -->
      <DependencyReplacements Include="$(CoreMajorVersion)" >
        <Key>CoreMajorVersion</Key>
      </DependencyReplacements>
      <DependencyReplacements Include="$(CoreMinorVersion)" >
        <Key>CoreMinorVersion</Key>
      </DependencyReplacements>
    </ItemGroup>

    <GenerateVersionFromTemplate
      Template="$(BuildRoot)\BuildTasks\PostRetrieve.proj.template"
      Files="$(OutputPath)\$(ProductNameForBuildIni)\PostRetrieve.proj"
      BuildTarget="$(BuildTarget)"
      BuildPlatform="$(BuildPlatform)"
      ProductName="$(ProductNameForBuildIni)"
      MajorVersion="$(MajorVersion)"
      MinorVersion="$(MinorVersion)"
      MajorVersionForCompatibility="$(MajorVersionForCompatibility)"
      MinorVersionForCompatibility="$(MinorVersionForCompatibility)"
      ServicePack="$(ServicePack)"
      BuildNumber="$(BuildNumber)"
      BuildRevision="$(BuildRevision)"
      BuildDate="$(BuildDate)"
      Company="$(Company)"
      Copyright="$(Copyright)"
      ValidateUnsubstituted="false"/>
  </Target>

  <Target Name="CopyFilesToOutput">
    <!-- Copy files for UTs -->

  </Target>

  <!-- Files needed for the Sitecore 5.3 package -->
  <ItemGroup>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore.ContentWebService.dll">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore.Shared.dll">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore53.dll">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore.ContentWebService.pdb">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore.Shared.pdb">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="Coveo.CES.CustomCrawlers.Sitecore53.pdb">
      <Location>files/bin</Location>
    </Sitecore53File>
    <Sitecore53File Include="CustomCrawlers\SitecoreWebService\CoveoContent.asmx">
      <Source>$(BuildRoot)</Source>
      <Location>files/sitecore modules/Web/Coveo/WebService</Location>
    </Sitecore53File>
  </ItemGroup>
  
  <!-- Files needed for the Sitecore 6 package -->
  <!-- Validate the API compatibility between major versions -->
  <PropertyGroup>
    <ApiReferencePath>D:\DevTools\CESPublicAPI\7.0.4885</ApiReferencePath>
    <ApiCheckExceptionFile>$(BuildRoot)\APICheckExceptions.xml</ApiCheckExceptionFile>
    <ApiCheckErrorFile>$(OutputPath)\APICheckErrors.xml</ApiCheckErrorFile>
  </PropertyGroup>

  <ItemGroup>
    <PublicAssembly Include="$(OutputPath)\Coveo.CES.CustomCrawlers.dll"/>
    <PublicAssembly Include="$(OutputPath)\Coveo.CES.SecurityProviders.Framework.dll"/>
  </ItemGroup>
</Project>
